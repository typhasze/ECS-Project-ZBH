LinkLoc: 13.0 -- Copyright (C) 1986-2005 Ardence, Inc.


Linking for 16-bit real mode


Command line switches:

-libpath C:\pharemb\lib;C:\pharemb\lib\vcdlllib @d:\ecslab\demo\demo.lkr
! Monitor linker command file.
!
! This file was automatically generated by the
! Visual System Builder (version 13)
! of the TNT Embedded ToolSuite.
!
! Do not edit this file.
!

@hostcomm.emb
! RCS_Id: hostcomm.emb 10.0 1999/10/27 12:45:28 build Exp $
!
! This file contains commands to link the host communications code
! into the monitor.
! You must also link in the appropriate comm driver (e.g. PCSER.LIB)
!
-lib hostcomm 
-define _EKLNK_WAITHOST=1	! wait for host
-define _EKLNK_SERCOM_PRES=1	! set communications code present flag
@appdisk.emb
! RCS_Id: appdisk.emb 10.0 1999/10/27 12:44:42 build Exp $
!
! This file contains commands to link the diskette application loader
! into the ETS monitor.
!

-lib appdisk

-define _EKLNK_APPLDR_PRES=1	! set diskette loader present flag
@vars.emb
!
! $Archive: /ETS/source/kernel/VARS.EMB $
! $Revision: 55 $  $Date: 12/09/05 11:18a $
!
! This file is used by the .BAT files in \PHAREMB\MONITOR\BUILD, that build
! the ETS Monitor manually.  The settings in this file can be modified as 
! necessary.
!
! When you use the Visual System Builder to build a monitor, this file is 
! replaced by a VARS.EMB created by the Visual System Builder.
!

! The value below specifies the address at which the monitor will be
! loaded when it is booted from a diskette.  (The monitor code is at
! the application load address when booted from ROM). The value is
! a paragraph address (e.g. 7E0h means 7E0h:0h).

-define _EKLNK_KERN_CODE=7E0H           ! default is 7E0H:0H

! The value below specifies the address at which the monitor will place
! its data (both ROM and diskette versions of the monitor use this value).
! The value is a paragraph address (e.g. 100h means 100h:0h).

-define _EKLNK_KERN_DATA=100H           ! default is 100H:0

! The values below specify the number and size of the monitor interrupt
! stacks. The default of 4 interrupt stacks of 512 bytes each should
! be sufficient for most users.

-offset segment _EKLNK_TOTSTKSIZE C00h  ! total size of ALL interrupt stacks
                                 !   min = 3K, max = 20K
-define _EKLNK_ISTKNUM=6                ! number of interrupt stacks
                                 !   min = 6, max = 20
                                 !   TOTSTKSIZE / ISTKNUM >= 512

! This value specifies whether the monitor should run the application
! immediately or wait for the host computer before starting.
! (0 = DON'T WAIT, 1 = WAIT)
!
! Note: You must uncomment this line if you would like to override the
!       default behavior, which is WAIT if serial support linked in,
!       otherwise DON'T WAIT).

!-redefine _EKLNK_WAITHOST=1            ! default is WAIT

! The values below specify the number and size of the memory regions
! available for allocation by the ETS Kernel.  This memory must be read/write
! memory. The maximum number of regions is 2 and the minimum is 1.
! These values specify the maximum size of each region -- the ETS Monitor
! will size each region at startup time and store the actual memory sizes
! in the EK_KERNELINFO block.

-define _EKLNK_MEM_N=2                  ! default is 2 regions

-define _EKLNK_MEM_START_1=0            ! first region starts a 0H
-define _EKLNK_MEM_LEN_1=A0000H         ! first region is 640K long

-define _EKLNK_MEM_START_2=1_00000H     ! second region starts at 1 MB
-define _EKLNK_MEM_LEN_2=FF_00000H      ! can be up to 255 MB long

! This value sets the default memory detection behavior, which is to
! try both Int 15h function 88h and Int 15h function E820h.  If
! function E820h works, that memory map is used, else the results from
! function 88h are used.
-define _EKLNK_MEMDETECTFLAGS=0

! The value below is used only when the floating point emulator is
! linked in. It controls whether the floating point emulator is always
! activated or if it activates only if a real coprocessor is not found.
! (0 = ONLY IF NOT FOUND, 1 = ALWAYS)

-define _EKLNK_FP_ALWAYS=0              ! default is activate if not found

! Communications port for monitor to use when talking to host.
!
! Serial port communications:
!       _EKLNK_PCSER_COM = 0    to use a custom I/O port
!                          1    to use COM1
!                          2    to use COM2
!       _EKLNK_PCSER_PORT  n    I/O port address, if _EKLNK_PCSER_COM == 0
!       _EKLNK_PCSER_SPEED = 0  to use autospeed baud rate selection
!                            n  otherwise, baud rate (9600 - 115200)
!
! Parallel port communications:
!       _EKLNK_PCSER_COM = 255  specifies parallel operation
!       _EKLNK_PCSER_PORT = 1   to use LPT1
!                           2   to use LPT2
!                           3   to use LPT3
!                           n   otherwise, custom I/O port address

-define _EKLNK_PCSER_COM=1              ! default is COM1
-define _EKLNK_PCSER_PORT=0             ! not needed for COM1 or COM2
-define _EKLNK_PCSER_SPEED=0            ! baud rate, default is autospeed

-define _EKLNK_BREAKOUT_FLAG=1          ! enable system breakout interrupt
-define _EKLNK_BREAKOUT_INT=0           ! use default interrupt level

! The settings below configure the MS-DOS compatible Local File System
! component of the ETS Kernel.  See list:
!
!       _EKLNK_FS_LSTDRIVE      Max drive letter available (1=A:, 2=B:,
!                               3=C:, etc.). Similar to LASTDRIVE= command
!                               in DOS.
!
!       _EKLNK_FS_NUMFILES      Max number of open files allowed. Similar
!                               to FILES= command in DOS.
!
!       _EKLNK_FS_BUFFERS       Number of disk buffers to allocate. Similar
!                               to BUFFERS= command in DOS.
!
!       _EKLNK_FS_NFLOPPY       Number of floppy drives installed (max = 2)
!       _EKLNK_FS_FTYPE1        Type of first floppy drive if present.
!       _EKLNK_FS_FTYPE2        Type of second floppy drive if present.
!
!       _EKLNK_FS_NIDE          Number of IDE drives installed (max = 2)
!
!       _EKLNK_FS_NRAMDISKS     Number of RAM drives to create (max = 1)
!       _EKLNK_FS_NFLASHDISK    Number of flash drives to create
!       _EKLNK_FS_NUSBDISK      Number of USB drives to create
!       _EKLNK_FS_RPAGENUM      Number of pages per RAM drive.
!       _EKLNK_FS_RPAGESIZE     Size of each page of RAM drive (in units
!                               of 512 bytes).
!       _EKLNK_FS_IDEREADFROMBIOS Read the logical IDE geometry from the BIOS, 
!                               (if present), rather than getting the physical 
!                               geometry from the IDE controller.
!

-define _EKLNK_FS_LSTDRIVE=5            ! default last drive is E:
-define _EKLNK_FS_NUMFILES=20           ! default max open files is 20
-define _EKLNK_FS_BUFFERS=10            ! default is 10 buffers

-define _EKLNK_FS_NFLOPPY=1             ! default is one floppy
-define _EKLNK_FS_FTYPE1=128            ! drive type for floppy 1 (A:)
                                 ! 0 ==> none
                                 ! 1 ==> 5.25" 360K
                                 ! 2 ==> 5.25" 1.2M
                                 ! 3 ==> 3.5" 720K
                                 ! 4 ==> 3.5" 1.44M
                                 ! 5 ==> 3.5" 2.88M
                                 ! 128 ==> read CMOS to get floppy type
-define _EKLNK_FS_FTYPE2=0           ! drive type for floppy 2 (B:)

-define _EKLNK_FS_NIDE=1                ! default is one IDE drives

-define _EKLNK_FS_NRAMDISK=0            ! default is no RAM disks
-define _EKLNK_FS_NFLASHDISK=0          ! default is no flash disk
-define _EKLNK_FS_NUSBDISK=0            ! default is no USB disks
-define _EKLNK_FS_RPAGENUM=16           ! default is 16 pages
-define _EKLNK_FS_RPAGESIZE=16          ! default is 16*512 bytes per page
-define _EKLNK_FS_IDEREADFROMBIOS=0     ! 0 ==> read from IDE controller
                                 ! 1 ==> read from BIOS

! The settings below configure two dimensions of time in the
! ETS Kernel.
!       _EKLNK_TIME_TICKLEN     The number of milliseconds to pass
!                               between timer ticks.
!
!       _EKLNK_SCHED_SLICELEN   The number of milliseconds to pass
!                               between round-robin scheduling events.

-define _EKLNK_TIME_TICKLEN=10          ! default is 10 ms
-define _EKLNK_SCHED_SLICELEN=10        ! default is 10 ms

! The settings below configure the priorities at which the timer
! and keyboard interrupt handler threads run.  The values can
! range from -15 to +15, but they should >0.  For backwards
! compatability, "0" is interpretted as "9".
!
!       _EKLNK_PRIORITY_TIMER   The priority of the timer thread.
!
!       _EKLNK_PRIORITY_KEYBOARD The priority of the keyboard thread.

-define _EKLNK_PRIORITY_TIMER=120         ! default as of v13 is 120
-define _EKLNK_PRIORITY_KEYBOARD=110      ! default as of v13 is 110

! The settings below tell diskkern.bin the name of the app to load, and the
! drive from which to load the app.

-define _EKLNK_APPDRIVE=FFFFFFFFh       ! Drive to load from 

-define _EKLNK_APPNAME1=20202020h       ! First 4 chars of file name
-define _EKLNK_APPNAME2=20202020h       ! Second 4 chars of file name
-define _EKLNK_APPNAME3=20202020h       ! Third 4 chars of file name
-define _EKLNK_APPNAME4=00000000h       ! Fourth 4 chars of file name

! Auto detect coprocessor

-define _EKLNK_COPROC_PRESENT=2

!
! The following are used to configure the TCPIP/Winsock DLL and Ethernet
! driver DLL.
!
! SocketCnt is the number of sockets the Winsock DLL can support.
!
-define _EKLNK_TCPIP_SOCKETCNT=10

!
! NumNetworkDevices sets the number of network interfaces available in
! the stack.  We default to three.
-define _EKLNK_TCPIP_NUMNETWORKDEVICES=3

!
! These are 32-bit hex representations of dotted-notation IP addresses,
! i.e. 010203FFh == 1.2.3.255.
!
! Special considerations:
!
!       Any of these may be set to FFFFFFFFh (-1) to force the use of
!       the BOOTP protocol to determine it's value from a BOOTP server.
!       The use of BOOTP will not overwrite any values given explicitly, so
!       for example, you may assign an IP address here, but set the rest
!       to -1 so they will be filled in via BOOTP.
!
!       If the Gateway/Router IP Address is 0, routing will be disabled.
!       If the DNS Server IP address is 0, DNS support will be disabled.
!
-define _EKLNK_TCPIP_IPADDR=FFFFFFFFh           ! Host IP address
-define _EKLNK_TCPIP_SUBNETMASK=FFFFFFFFh       ! Subnet Mask
-define _EKLNK_TCPIP_IPGATEWAY=FFFFFFFFh        ! Gateway/Router IP Address
-define _EKLNK_TCPIP_IPDNSSERVER=FFFFFFFFh      ! Domain Name Services Server
                                         ! IP Address
!
! The following control the configuration of the low-level ethernet
! hardware driver DLL.  Any or all of these may or may not be used for
! any particular driver.
!
-define _EKLNK_TCPIP_ENETFIELD1=0       ! TCPIP Ethernet hardware
-define _EKLNK_TCPIP_ENETFIELD2=0       ! parameters go here...
-define _EKLNK_TCPIP_ENETFIELD3=0       ! 
-define _EKLNK_TCPIP_ENETFIELD4=0       ! 
-define _EKLNK_TCPIP_ENETFIELD5=0       ! 

!
! On a typical ethernet board, the 6-byte ethernet address is stored
! permanently, not to be changed.  However, if necesary, an ethernet
! address may be stored here if your hardware doesn't support a more
! permanent solution.
!
! Only the lower three bytes of each value will be used to create the
! 6-byte ethernet address.
!
! -define _EKLNK_TCPIP_MFGCODE=C0h      ! dummy, uses SMC's vendor code
! -define _EKLNK_TCPIP_STATION=11223344h        ! dummy station address
!
! would result in an ethernet address of 00:00:C0:22:33:44.
!
!
! **  Note that any ethernet address you store here should be rigorously
! **  subjected to IEEE standards regarding the three byte vendor code
! **  portion of the address and the three byte station portion of the
! **  address.
!
!
-define _EKLNK_TCPIP_MFGCODE=0
-define _EKLNK_TCPIP_STATION=0

!
! For BIOS Extension monitors, the default startup mode will be to
! wait for an INT19 boot request in real mode before starting the monitor.
! If this variable is non-zero, the monitor will start immediately
! when it is entered as a BIOS extension.
!
-define _EKLNK_BIOSEXT_STARTIMMED=0

!
! EKLNK_FLAT_DATA_LIMIT sets the limit value of the expand down flat
! data segment.  Data accesses below this limit will generate a general
! protection fault.  A typical value is 4K (0FFFh) which will detect NULL
! pointer references to the first 4K of memory.  A value of zero
! disables NULL pointer detection and allows data accesses to the entire
! 4Gb address range.
!
! EKLNK_FLAT_CODE_LIMIT sets the limit value of the expand up flat code
! segment.  Code accesses above this limit will generate a general
! protection fault and indicate that the program has run off into
! unused memory.  A typical value might be 0FFFFFFh (16Mb) or 1FFFFFFh (32Mb)
! depending on the amount of memory in the target system.  For systems
! which contain the code in ROM, the value would be the size of
! the entire address space accessible from the CPU.
!
! A value of zero sets the limit to 4Gb.
!
-define _EKLNK_FLAT_DATA_LIMIT=0fffh
-define _EKLNK_FLAT_CODE_LIMIT=0

!
! EKLNK_NULL_JUMP_PROT sets the limit value for null jump protection.
! Jumping below this limit will generate an INT 3.
! A typical value is 4K - 1 (0FFFh) which will detect NULL pointer 
! references to the first 4K of memory.  A value of zero disables NULL 
! pointer detection.
!
! This was changed from 0FFFh to 03Fh to support the EtsBiosCall function.
-define _EKLNK_NULL_JUMP_PROT=03Fh

!
! EKLNK_TCPIP_USECSLIP controls whether a SLIP connection is created using
! the compressed or uncompressed SLIP protocol.  "Compressed" SLIP saves
! serial bandwidth by various methods, resulting in a reduction in size
! from 40 bytes (20 IP, 20 TCP) for the typical TCP/IP header down to
! 3-5 bytes, depending on the type of data being sent over the connection.
! Originally created for slow links (<4800 bits-per-sec) to help with
! interactive response, CSLIP is not usually necesary over typical higher
! speed links, and does take some processing time - therefore by default CSLIP
! is not enabled.  To enable, change this to a non-zero value.
-define _EKLNK_TCPIP_USECSLIP=0

!
! The Domain Name Services code in the TCP/IP stack attempts to resolve
! IP addresses into  names and vice-versa (e.g, 192.107.36.10 <->
! ftp.pharlap.com.)  This low-level service is asynchronous - the DNS code
! will make some number of attempts to resolve each request, and wait some
! number of seconds for a reply each time.  There is no guarantee that any
! response will be received for any particular request.  However, the upper
! level APIs (gethostbyname, etc) _do_ block until the low level code either
! fails or succeeds, thus the values specified here determine the worst-case
! time one of those APIs may take to complete.  In particular, using the
! defaults of 3 retries and 10 seconds wait for each one, leads to a
! completion time of 30 seconds if all three request attempts
! receive no response from the server.
!

! Number of attempts to resolve a request
-define _EKLNK_TCPIP_DNSRETRIES=3

! Time in seconds to wait for a response from a DNS server for any
! particular request
-define _EKLNK_TCPIP_DNSRETRYWAIT=10

!
! For some network drivers, it may be advantageous to control when the device
! is brought online manually.  By default, all devices are brought online
! during the first call to WSAStartup().  Setting this to true will cause
! the driver controlled by the stored configuration entry to NOT be brought
! online automatically.
-define _EKLNK_TCPIP_DELAYBRINGINGUP=0

!
! The SLIP/PPP code can either attempt to initialize a connection at once, or
! wait for a remote host to initialize a connection.  Setting this TRUE (the
! default) makes an ETS TCP/IP SLIP or PPP connection actively attempt to
! connect to a remote host.  If FALSE, then wait for a remote connection.
-define _EKLNK_TCPIP_SERINITCONNECT=1

!
! PC Card configuration details
!

! Where in I/O space to look for a host controller.  I82365-compatibles
! are usually found at 0x3e0, "0" means use a default setting.
-define _EKLNK_PCCARD_HOSTINFO=0

! A region in IO space that Card Services can use to map a PC Card.
! The start of the region is stored in the lower 16 bits, the size
! is stored in the upper 16 bits.
-define _EKLNK_PCCARD_RESOURCEIO=0

! A region in memory address space that Card Services can use to map
! PC Card memory.  This mapping is used for access to a Card's CIS
! in addition to programming memory-mapped devices.
-define _EKLNK_PCCARD_RESOURCEMEMSTART=0
-define _EKLNK_PCCARD_RESOURCEMEMSIZE=0

! A mask representing the set of IRQs that PC Card devices might be
! assigned to.  The default of 0x8c20 represents 15, 11, 10, and 5.
-define _EKLNK_PCCARD_RESOURCEIRQMASK=8c20h

! One per PC Card socket, the perferred IRQ and IO addresses of the
! card inserted into said slot.  The IO is stored in the low-order
! 16 bits, the IRQ address is stored in bits 16-23.  The upper-most
! byte is unused.
-define _EKLNK_PCCARD_SLOTINFO0=0
-define _EKLNK_PCCARD_SLOTINFO1=0
-define _EKLNK_PCCARD_SLOTINFO2=0
-define _EKLNK_PCCARD_SLOTINFO3=0
-define _EKLNK_PCCARD_SLOTINFO4=0
-define _EKLNK_PCCARD_SLOTINFO5=0
-define _EKLNK_PCCARD_SLOTINFO6=0
-define _EKLNK_PCCARD_SLOTINFO7=0

! Method for enabling A20 Line. 
-define _EKLNK_A20_ENABLE_SCHEME=FFFFFFFFh              ! Auto detect

! This switch is used to keep the kernel from notifying the debugger about
! thread related events.  Since interrupts are disbabled when notifying the 
! debugger about system events, setting this switch will make the program 
! perform closer to how it would normally perform outside of the debugger.  
! The sacrifice is that the debugger is no longer able to keep track of a
! program's threads.
-define _EKLNK_NO_THREAD_NOTIFY=0

! Port(s) to search to find a mouse. This is a bit map with the following
! bits defined (numbers in hex): 01=COM1 02=COM2 04=COM3 08=COM4 10=PS/2.
-define _EKLNK_MOUSE_PORT=16                   ! default: search PS/2 port only

! Mouse speed.  This is a 16-bit fixed-point value, with the high-order
! 8 bits the integer part and the low-order 8 bits the fraction.  All raw
! mouse movements are multiplied by this value.
-define _EKLNK_MOUSE_SPEED=256                                  ! default: 1.0

! Mouse double-click interval.  This is the maximum number of milliseconds
! that can separate the two clicks of a mouse double-click.
-define _EKLNK_MOUSE_DCLICK_TIME=0                              ! default: doubleclick disabled

! The value below specifies the action taken when either the application
! exits or faults.  A value of 0 means to either halt, or inform
! the host debugger, depending on severity.  A value of 1 means to
! reboot.
-define _EKLNK_REBOOT_ON_ERROR=0

! The value below specifies what software method should be used
! to reboot the computer.  See PCATI2.C for a complete definition.
-define _EKLNK_REBOOT_TYPE=1
@kernel.emb
! RCS_Id: kernel.emb 10.0 1999/10/27 12:45:30 build Exp $
!
! This file contains commands used for building all monitors.
!

-86                             ! 8086 target
-dosorder                       ! Specify DOS segment ordering for MSC
-nodefaultlib	  ! Don't search default libraries
-lib kernel	  ! base library for all monitors
-lib kernvsb	  ! VSB data for all monitors
-stack 1000h	  ! 4K stack

!
! The settings below can be modified as required.
! 
-publist byvalue                ! Display public symbols sorted by address
-fullseg	  ! Display better map file

! The value below specifies the debugging flags used by the various monitor
! subsystems.  It can be referenced internally by VsbVars.KernelDebugFlags.
! The bit definitions are:
!	Bits 0 - 6		Reserved for user modifications to the monitor
!	Bits 7 - 11		Host communications debug flags
!	Bits 12 - 31		Currently unused

-define _EKLNK_KERN_DEBUGFL=00000000h	! default is 0

! The value below is used to control the hooking of exceptions by the monitor.
! Turning a bit on prevents the monitor from hooking the corresponding
! exception.  For example, a value of 1000h would prevent the hooking of
! exception 12.

-define _EKLNK_KERN_NOHAND=0000h	! default is 0
@diskkern.emb
! RCS_Id: diskkern.emb 10.0 1999/10/27 12:45:03 build Exp $
!
! This file contains commands to link a monitor that is loaded from
! a disk.
!

-define _CheckPE=0	 ! suppress checking for app in ROM
-define _EKLNK_STARTUP_TYPE=3	! 1:boot vector 2:bios extension 3:diskette
-startobj mscin86.obj	 ! must be first object processed by linker
-locate first 7E00h             ! Locate first seg    (address is fake)
-locate group DGROUP 0h	 ! Locate monitor data  (address is fake)
-binary DISKKERN.BIN 7E00h	! Produce binary file (address is fake)
-redefine _EKLNK_TCPIP_SOCKETCNT=10
-redefine _EKLNK_TCPIP_NUMNETWORKDEVICES=3
-redefine _EKLNK_TCPIP_DNSRETRIES=3
-redefine _EKLNK_TCPIP_DNSRETRYWAIT=10
-redefine _EKLNK_TCPIP_IPDNSSERVER=00000000H
-redefine _EKLNK_PCCARD_HOSTINFO=0H
-redefine _EKLNK_PCCARD_RESOURCEIRQMASK=8C20H
-redefine _EKLNK_PCCARD_RESOURCEIO=00000H
-redefine _EKLNK_PCCARD_RESOURCEMEMSTART=0H
-redefine _EKLNK_PCCARD_RESOURCEMEMSIZE=0H
-redefine _EKLNK_PCCARD_SLOTINFO0=00000H
-redefine _EKLNK_PCCARD_SLOTINFO1=00000H
-redefine _EKLNK_PCCARD_SLOTINFO2=00000H
-redefine _EKLNK_PCCARD_SLOTINFO3=00000H
-redefine _EKLNK_PCCARD_SLOTINFO4=00000H
-redefine _EKLNK_PCCARD_SLOTINFO5=00000H
-redefine _EKLNK_PCCARD_SLOTINFO6=00000H
-redefine _EKLNK_PCCARD_SLOTINFO7=00000H
-redefine _EKLNK_TCPIP_SOCKETCNT=10
-redefine _EKLNK_TCPIP_NUMNETWORKDEVICES=3
-redefine _EKLNK_TCPIP_DELAYBRINGINGUP=0
-redefine _EKLNK_TCPIP_DNSRETRIES=3
-redefine _EKLNK_TCPIP_DNSRETRYWAIT=30
-redefine _EKLNK_TCPIP_IPADDR=FFFFFFFFH
-redefine _EKLNK_TCPIP_SUBNETMASK=FFFFFFFFH
-redefine _EKLNK_TCPIP_IPGATEWAY=FFFFFFFFH
-redefine _EKLNK_TCPIP_IPDNSSERVER=FFFFFFFFH
-redefine _EKLNK_TCPIP_SERINITCONNECT=1
-redefine _EKLNK_TCPIP_USECSLIP=0
-redefine _EKLNK_TCPIP_ENETFIELD1=0H
-redefine _EKLNK_TCPIP_ENETFIELD2=0
-redefine _EKLNK_TCPIP_ENETFIELD3=0
-redefine _EKLNK_TCPIP_ENETFIELD4=0
-redefine _EKLNK_TCPIP_ENETFIELD5=0
-redefine _EKLNK_TCPIP_MFGCODE=0H
-redefine _EKLNK_TCPIP_STATION=0H
-redefine _EKLNK_FS_IDEREADFROMBIOS=0
-redefine _EKLNK_FS_LSTDRIVE=3
-redefine _EKLNK_FS_NUMFILES=20
-redefine _EKLNK_FS_BUFFERS=10
-redefine _EKLNK_FS_NFLOPPY=1
-redefine _EKLNK_FS_FTYPE1=128
-redefine _EKLNK_FS_FTYPE2=128
-redefine _EKLNK_FS_NIDE=1
-redefine _EKLNK_FS_NRAMDISK=0
-redefine _EKLNK_FS_NFLASHDISK=0
-redefine _EKLNK_FS_RPAGESIZE=2
-redefine _EKLNK_FS_RPAGENUM=128
-redefine _EKLNK_FS_NUSBDISK=0
-redefine _EKLNK_SCHED_SLICELEN=10
-redefine _EKLNK_FP_ALWAYS=0
-redefine _EKLNK_TIME_TICKLEN=10
-redefine _EKLNK_FLAT_DATA_LIMIT=FFFH
-redefine _EKLNK_FLAT_CODE_LIMIT=0H
-redefine _EKLNK_NULL_JUMP_PROT=3FH
-redefine _EKLNK_PCSER_COM=1
-redefine _EKLNK_PCSER_PORT=0
-redefine _EKLNK_PCSER_SPEED=0
-lib pcser.lib
-redefine _EKLNK_BREAKOUT_FLAG=1
-redefine _EKLNK_BREAKOUT_INT=0
-redefine _EKLNK_WAITHOST=1
-redefine _EKLNK_APPDRIVE=FFFFFFFFh
-redefine _EKLNK_APPNAME1=20202020h
-redefine _EKLNK_APPNAME2=20202020h
-redefine _EKLNK_APPNAME3=20202020h
-redefine _EKLNK_APPNAME4=00000000h
-redefine _EKLNK_MEM_N=2
-redefine _EKLNK_MEM_START_1=0H
-redefine _EKLNK_MEM_LEN_1=A0000H
-redefine _EKLNK_MEM_START_2=100000H
-redefine _EKLNK_MEM_LEN_2=FF00000H
-redefine _EKLNK_BIOSEXT_STARTIMMED=0
-bin diskmon.bin 7E00H
-redefine _EKLNK_A20_ENABLE_SCHEME=FFFFFFFFH
-redefine _EKLNK_ISTKNUM=6
-offset segment _EKLNK_TOTSTKSIZE C00H
-redefine _EKLNK_COPROC_PRESENT=2
-redefine _EKLNK_KERN_CODE=7E0H
-redefine _EKLNK_KERN_DATA=100H
-lib "PCAT.LIB"
-redefine _EKLNK_REBOOT_ON_ERROR=0
-redefine _EKLNK_REBOOT_TYPE=0



Input module(s):

"mscin86" from file "C:\pharemb\lib\mscin86.obj"  [Fri Dec 23 13:00:04 2005].
"targmain" from file "C:\pharemb\lib\hostcomm.lib"  [Fri Dec 23 13:00:06 2005].
"trdlib" from file "C:\pharemb\lib\hostcomm.lib"  [Fri Dec 23 13:00:06 2005].
"int32" from file "C:\pharemb\lib\hostcomm.lib"  [Fri Dec 23 13:00:06 2005].
"targcom" from file "C:\pharemb\lib\hostcomm.lib"  [Fri Dec 23 13:00:06 2005].
"diskdr" from file "C:\pharemb\lib\appdisk.lib"  [Fri Dec 23 13:00:06 2005].
"math32" from file "C:\pharemb\lib\appdisk.lib"  [Fri Dec 23 13:00:06 2005].
"rutil" from file "C:\pharemb\lib\kernel.lib"  [Fri Dec 23 13:00:04 2005].
"services" from file "C:\pharemb\lib\kernel.lib"  [Fri Dec 23 13:00:04 2005].
"kernerr" from file "C:\pharemb\lib\kernel.lib"  [Fri Dec 23 13:00:04 2005].
"ekidata" from file "C:\pharemb\lib\kernel.lib"  [Fri Dec 23 13:00:04 2005].
"ekdata" from file "C:\pharemb\lib\kernel.lib"  [Fri Dec 23 13:00:04 2005].
"vsbvars" from file "C:\pharemb\lib\kernvsb.lib"  [Fri Dec 23 13:00:06 2005].
"pcser" from file "C:\pharemb\lib\pcser.lib"  [Fri Dec 23 13:00:04 2005].
"pcsera" from file "C:\pharemb\lib\pcser.lib"  [Fri Dec 23 13:00:04 2005].
"pcati1" from file "C:\pharemb\lib\PCAT.LIB"  [Fri Dec 23 13:00:06 2005].
"pcati2" from file "C:\pharemb\lib\PCAT.LIB"  [Fri Dec 23 13:00:06 2005].


Segment map

     Name         Group         Class     Type  Frame:off  Size
------------  ------------  ------------  ----  ---------  ----
START_CODE    CGROUP        CODE          PUB   7E00:0000  0000
  mscin86     CGROUP        CODE          PUB   7E00:0000  0000
_TEXT         CGROUP        CODE          PUB   7E00:0000  7240
  mscin86     CGROUP        CODE          PUB   7E00:0000  0183
  targmain    CGROUP        CODE          PUB   7E00:0184  1CA6
  trdlib      CGROUP        CODE          PUB   7E00:1E2A  1092
  int32       CGROUP        CODE          PUB   7E00:2EBC  00E3
  targcom     CGROUP        CODE          PUB   7E00:2FA0  0A38
  diskdr      CGROUP        CODE          PUB   7E00:39D8  178E
  math32      CGROUP        CODE          PUB   7E00:5166  0070
  rutil       CGROUP        CODE          PUB   7E00:51D6  02CE
  services    CGROUP        CODE          PUB   7E00:54A4  0714
  kernerr     CGROUP        CODE          PUB   7E00:5BB8  0313
  ekidata     CGROUP        CODE          PUB   7E00:5ECC  0002
  ekdata      CGROUP        CODE          PUB   7E00:5ECE  0002
  vsbvars     CGROUP        CODE          PUB   7E00:5ED0  0168
  pcser       CGROUP        CODE          PUB   7E00:6038  0442
  pcsera      CGROUP        CODE          PUB   7E00:647C  00CC
  pcati1      CGROUP        CODE          PUB   7E00:6548  05AE
  pcati2      CGROUP        CODE          PUB   7E00:6AF6  074A
_TEXT32       CGROUP        CODE          PUB   7E00:7240  0DF8
  mscin86     CGROUP        CODE          PUB   7E00:7240  0000
  int32       CGROUP        CODE          PUB   7E00:7240  0C04
  rutil       CGROUP        CODE          PUB   7E00:7E44  005B
  pcsera      CGROUP        CODE          PUB   7E00:7EA0  00EC
  pcati1      CGROUP        CODE          PUB   7E00:7F8C  00AC
END_CODE      CGROUP        CODE          PUB   7E00:8038  0002
  mscin86     CGROUP        CODE          PUB   7E00:8038  0002
INTSTK        DGROUP        INTSTK        PUB   0000:0000  0000
  mscin86     DGROUP        INTSTK        PUB   0000:0000  0000
_EKLNK_TOTS-  DGROUP        INTSTK        PUB   0000:0C00  0000
  mscin86     DGROUP        INTSTK        PUB   0000:0C00  0000
_DATA         DGROUP        DATA          PUB   0000:0C00  0000
  mscin86     DGROUP        DATA          PUB   0000:0C00  0000
  targmain    DGROUP        DATA          PUB   0000:0C00  0000
  trdlib      DGROUP        DATA          PUB   0000:0C00  0000
  targcom     DGROUP        DATA          PUB   0000:0C00  0000
  diskdr      DGROUP        DATA          PUB   0000:0C00  0000
  services    DGROUP        DATA          PUB   0000:0C00  0000
  kernerr     DGROUP        DATA          PUB   0000:0C00  0000
  ekidata     DGROUP        DATA          PUB   0000:0C00  0000
  ekdata      DGROUP        DATA          PUB   0000:0C00  0000
  pcser       DGROUP        DATA          PUB   0000:0C00  0000
  pcati1      DGROUP        DATA          PUB   0000:0C00  0000
  pcati2      DGROUP        DATA          PUB   0000:0C00  0000
CONST         DGROUP        DATA          PUB   0000:0C00  0000
  mscin86     DGROUP        DATA          PUB   0000:0C00  0000
  targmain    DGROUP        DATA          PUB   0000:0C00  0000
  trdlib      DGROUP        DATA          PUB   0000:0C00  0000
  targcom     DGROUP        DATA          PUB   0000:0C00  0000
  diskdr      DGROUP        DATA          PUB   0000:0C00  0000
  services    DGROUP        DATA          PUB   0000:0C00  0000
  kernerr     DGROUP        DATA          PUB   0000:0C00  0000
  ekidata     DGROUP        DATA          PUB   0000:0C00  0000
  ekdata      DGROUP        DATA          PUB   0000:0C00  0000
  pcser       DGROUP        DATA          PUB   0000:0C00  0000
  pcati1      DGROUP        DATA          PUB   0000:0C00  0000
  pcati2      DGROUP        DATA          PUB   0000:0C00  0000
_BSS          DGROUP        BSS           PUB   0000:0C00  3098
  mscin86     DGROUP        BSS           PUB   0000:0C00  0000
  targmain    DGROUP        BSS           PUB   0000:0C00  0000
  trdlib      DGROUP        BSS           PUB   0000:0C00  0000
  int32       DGROUP        BSS           PUB   0000:0C00  120C
  targcom     DGROUP        BSS           PUB   0000:1E0C  0000
  diskdr      DGROUP        BSS           PUB   0000:1E0C  1E5C
  math32      DGROUP        BSS           PUB   0000:3C68  0000
  rutil       DGROUP        BSS           PUB   0000:3C68  0005
  services    DGROUP        BSS           PUB   0000:3C6E  0000
  kernerr     DGROUP        BSS           PUB   0000:3C6E  0000
  ekidata     DGROUP        BSS           PUB   0000:3C6E  0000
  ekdata      DGROUP        BSS           PUB   0000:3C6E  0000
  pcser       DGROUP        BSS           PUB   0000:3C6E  0000
  pcsera      DGROUP        BSS           PUB   0000:3C70  0001
  pcati1      DGROUP        BSS           PUB   0000:3C74  0008
  pcati2      DGROUP        BSS           PUB   0000:3C7C  001C
c_common      DGROUP        BSS           PUB   0000:3C98  12AA
  mscin86     DGROUP        BSS           PUB   0000:3C98  0000
  pcati1      DGROUP        BSS           PUB   0000:3C98  0000
              DGROUP        BSS           PUB   0000:3CA0  12A2
STACK         DGROUP        STACK         STK   0000:4F44  1000
  mscin86     DGROUP        STACK         STK   0000:4F44  0000
  pcati1      DGROUP        STACK         STK   0000:4F44  1000
STACKEND      DGROUP        STACK         PUB   0000:5F44  0000
  mscin86     DGROUP        STACK         PUB   0000:5F44  0000
  pcati1      DGROUP        STACK         PUB   0000:5F44  0000


Public symbols

    Value        Name
------------  ---------
0000:0000     _EKLNK_PCCARD_SLOTINFO3
0000:0000     _EKLNK_PCCARD_SLOTINFO4
0000:0000     _EKLNK_PCCARD_SLOTINFO5
0000:0000     _EKLNK_PCCARD_SLOTINFO6
0000:0000     _EKLNK_PCCARD_SLOTINFO7
0000:0000     _EKLNK_NO_THREAD_NOTIFY
0000:0000     _EKLNK_MOUSE_DCLICK_TIME
0000:0000     _EKLNK_REBOOT_ON_ERROR
0000:0000     _EKLNK_REBOOT_TYPE
0000:0000     _EKLNK_KERN_DEBUGFL
0000:0000     _EKLNK_KERN_NOHAND
0000:0000     _CheckPE
0000:0000     __acrtused
0000:0000     _EKLNK_MEM_START_1
0000:0000     _EKLNK_MEMDETECTFLAGS
0000:0000     _EKLNK_FP_ALWAYS
0000:0000     _EKLNK_PCSER_PORT
0000:0000     _EKLNK_PCSER_SPEED
0000:0000     _EKLNK_BREAKOUT_INT
0000:0000     _EKLNK_FS_NRAMDISK
0000:0000     _EKLNK_FS_NFLASHDISK
0000:0000     _EKLNK_FS_NUSBDISK
0000:0000     _EKLNK_FS_IDEREADFROMBIOS
0000:0000     _EKLNK_APPNAME4
0000:0000     _EKLNK_TCPIP_ENETFIELD1
0000:0000     _EKLNK_TCPIP_ENETFIELD2
0000:0000     _EKLNK_TCPIP_ENETFIELD3
0000:0000     _EKLNK_TCPIP_ENETFIELD4
0000:0000     _EKLNK_TCPIP_ENETFIELD5
0000:0000     _EKLNK_TCPIP_MFGCODE
0000:0000     _EKLNK_TCPIP_STATION
0000:0000     _EKLNK_BIOSEXT_STARTIMMED
0000:0000     _EKLNK_FLAT_CODE_LIMIT
0000:0000     _EKLNK_TCPIP_USECSLIP
0000:0000     _EKLNK_TCPIP_DELAYBRINGINGUP
0000:0000     _EKLNK_PCCARD_HOSTINFO
0000:0000     _EKLNK_PCCARD_RESOURCEIO
0000:0000     _EKLNK_PCCARD_RESOURCEMEMSTART
0000:0000     _EKLNK_PCCARD_RESOURCEMEMSIZE
0000:0000     _EKLNK_PCCARD_SLOTINFO0
0000:0000     _EKLNK_PCCARD_SLOTINFO1
0000:0000     _EKLNK_PCCARD_SLOTINFO2
0000:0001     _EKLNK_WAITHOST
0000:0001     _EKLNK_SERCOM_PRES
0000:0001     _EKLNK_APPLDR_PRES
0000:0001     _EKLNK_PCSER_COM
0000:0001     _EKLNK_BREAKOUT_FLAG
0000:0001     _EKLNK_FS_NFLOPPY
0000:0001     _EKLNK_FS_NIDE
0000:0001     _EKLNK_TCPIP_SERINITCONNECT
0000:0002     _EKLNK_MEM_N
0000:0002     _EKLNK_FS_RPAGESIZE
0000:0002     _EKLNK_COPROC_PRESENT
0000:0003     _EKLNK_STARTUP_TYPE
0000:0003     _EKLNK_FS_LSTDRIVE
0000:0003     _EKLNK_TCPIP_NUMNETWORKDEVICES
0000:0003     _EKLNK_TCPIP_DNSRETRIES
0000:0006     _EKLNK_ISTKNUM
0000:000A     _EKLNK_FS_BUFFERS
0000:000A     _EKLNK_TIME_TICKLEN
0000:000A     _EKLNK_SCHED_SLICELEN
0000:000A     _EKLNK_TCPIP_SOCKETCNT
0000:0010     _EKLNK_MOUSE_PORT
0000:0014     _EKLNK_FS_NUMFILES
0000:001E     _EKLNK_TCPIP_DNSRETRYWAIT
0000:003F     _EKLNK_NULL_JUMP_PROT
0000:006E     _EKLNK_PRIORITY_KEYBOARD
0000:0078     _EKLNK_PRIORITY_TIMER
0000:0080     _EKLNK_FS_FTYPE1
0000:0080     _EKLNK_FS_FTYPE2
0000:0080     _EKLNK_FS_RPAGENUM
0000:0100     _EKLNK_MOUSE_SPEED
0000:0100     _EKLNK_KERN_DATA
0000:07E0     _EKLNK_KERN_CODE

0000:0C00  Segment _EKLNK_TOTSTKSIZE of module mscin86.asm (C:\pharemb\lib\mscin86.obj)
0000:0C00     _TOTSTKSIZE

0000:0C00  Segment _BSS of module int32.asm (C:\pharemb\lib\hostcomm.lib)
0000:0C00     _gdt
0000:0D90     _idt
0000:0FFF     _EKLNK_FLAT_DATA_LIMIT
0000:1590     _int_table
0000:1D90     _exc_table
0000:1DD0     _umb_next_esp
0000:1DD4     _fInNMI
0000:1DD8     _NMIFlags
0000:1DDC     umb_eip

0000:3C68  Segment _BSS of module rutil.asm (C:\pharemb\lib\kernel.lib)
0000:3C68     _jmpfar_op

0000:3C74  Segment _BSS of module pcati1.asm (C:\pharemb\lib\PCAT.LIB)
0000:3C7A     _laste820

0000:3CA0  Segment c_common
0000:3CA0     _break_on
0000:3CA4     _codebase
0000:3CA8     _CommBaseAddress
0000:3CAA     _CommLineStatus
0000:3CAC     _CommParallel
0000:3CB0     _dbg_msb
0000:3E24     _fCallAppExit
0000:3E28     _gdtidtInfo
0000:3E80     _gdtptr1
0000:3E88     _idtptr1
0000:3E90     _idtptr2
0000:3E98     _inbuff
0000:4098     _KernelInfo
0000:4198     _KernelMap
0000:41B6     _last_command
0000:41B8     _memory_map
0000:4348     _nak_received
0000:4350     _outbuff
0000:4550     _rcvbuf
0000:4950     _rdilib_thread
0000:4954     _real_cs
0000:4958     _ScreenInfo
0000:4972     _sequence
0000:4978     _targ_msb
0000:4AF0     _teb
0000:4B34     _umb_stack_count
0000:4B36     _umb_stack_size
0000:4B38     _umb_stack_start
0000:4B3A     _userflag
0000:4B40     _xmtbuf
0000:4F40     _xmtlen

0000:4F44  Segment STACK of module mscin86.asm (C:\pharemb\lib\mscin86.obj)
0000:4F44     SSTACK

0000:5F44  Segment STACKEND of module mscin86.asm (C:\pharemb\lib\mscin86.obj)
0000:5F44     ESTACK
0000:8C20     _EKLNK_PCCARD_RESOURCEIRQMASK
0000:A0000    _EKLNK_MEM_LEN_1
0000:00000    _EKLNK_MEM_START_2
0000:00000    _EKLNK_MEM_LEN_2
0000:02020    _EKLNK_APPNAME1
0000:02020    _EKLNK_APPNAME2
0000:02020    _EKLNK_APPNAME3
0000:FFFFF    _EKLNK_A20_ENABLE_SCHEME
0000:FFFFF    _EKLNK_APPDRIVE
0000:FFFFF    _EKLNK_TCPIP_IPADDR
0000:FFFFF    _EKLNK_TCPIP_SUBNETMASK
0000:FFFFF    _EKLNK_TCPIP_IPGATEWAY
0000:FFFFF    _EKLNK_TCPIP_IPDNSSERVER

7E00:0000  Segment START_CODE of module mscin86.asm (C:\pharemb\lib\mscin86.obj)
7E00:0000     _StartOfCode

7E00:0000  Segment _TEXT of module mscin86.asm (C:\pharemb\lib\mscin86.obj)
7E00:0010     start
7E00:0089     bio_ext_start
7E00:00AC     _EkInitKernelData
7E00:00C4     CheckDos
7E00:00EB     _get_seg_lims
7E00:0110     prcsr_type

7E00:0184  Segment _TEXT of module targmain.c (C:\pharemb\lib\hostcomm.lib)
7E00:0534     _init_var
7E00:061E     _kprintf
7E00:0854     _seg_setdesc
7E00:08D8     _write_kmap
7E00:0918     _read_kmap
7E00:0956     _InitTEB
7E00:09C6     _init_gdt
7E00:0CCA     _init_idtr
7E00:0D04     _init_idt
7E00:0F94     _FarToLin
7E00:1000     _EkAllocateSelector
7E00:1056     _EkSetInterruptHandler
7E00:1080     _EkSetInterruptVector
7E00:1092     _EkGetInterruptHandler
7E00:10E6     _EkGetInterruptVector
7E00:10F8     _EkGetVsbVarsPointer
7E00:10FC     _cmd_manager
7E00:14FC     _set_msb_d
7E00:152A     _StartCrit16
7E00:1548     _EndCrit16
7E00:1554     _SaveTargSRegs
7E00:1568     _InitSystemRegs
7E00:15AC     _DisplayError
7E00:15BE     _DisplayErrorInternal
7E00:1656     _DisplayBanner
7E00:1864     _main
7E00:1ABA     _ResetKernel
7E00:1B72     _FatalErr
7E00:1B88     _DisplayTargetRegs
7E00:1C1A     _HaltMonitor
7E00:1C32     _ExceptionInMonitor
7E00:1C52     _ValidateProtRange
7E00:1D80     _CheckMonWrite

7E00:1E2A  Segment _TEXT of module trdlib.c (C:\pharemb\lib\hostcomm.lib)
7E00:1E2A     _memcpy_m
7E00:1E4E     _dbg_go
7E00:1F12     _dbg_rdsdes
7E00:1F5E     _dbg_pwrite
7E00:1FC2     _dbg_pwrite_b
7E00:202A     _dbg_rdides
7E00:206E     _dbg_rdexc
7E00:20B2     _dbg_pread
7E00:210E     _dbg_iport
7E00:2174     _dbg_oport
7E00:21D2     _dbg_wrmsb
7E00:2204     _dbg_rdmsb
7E00:2234     _dbg_wrmsb_masked
7E00:265C     _dbg_rdmsb_masked
7E00:2AE4     _dbg_GetKernelVersion
7E00:2AE8     _dbg_setthread
7E00:2AF8     _dbg_getthread
7E00:2B36     _dbg_setprocess
7E00:2B3A     _dbg_getprocess
7E00:2B40     _dbg_resumethrd
7E00:2B82     _dbg_suspendthrd
7E00:2BC4     _dbg_set_thread_context
7E00:2C16     _dbg_get_thread_context
7E00:2C68     _dbg_get_sched_routine
7E00:2CA6     _dbg_getthreadprio
7E00:2CE8     _dbg_setthreadprio
7E00:2D2C     _dbg_getthreadname
7E00:2D6E     _dbg_write_item
7E00:2DF4     _dbg_read_item

7E00:2EBC  Segment _TEXT of module int32.asm (C:\pharemb\lib\hostcomm.lib)
7E00:2EBC     _get_idt_stubsize
7E00:2EC0     _CallApp
7E00:2F20     _CallFuncp

7E00:2FA0  Segment _TEXT of module targcom.c (C:\pharemb\lib\hostcomm.lib)
7E00:3314     _hexprint
7E00:3360     _compute_crc
7E00:3380     _send_byte
7E00:339A     _send_buffer
7E00:33F4     _receive_message
7E00:3476     _prepare_message
7E00:35CE     _translate_result
7E00:3704     _wait_message
7E00:3936     _send_message

7E00:39D8  Segment _TEXT of module diskdr.c (C:\pharemb\lib\appdisk.lib)
7E00:3A14     _lastCluster
7E00:3AC2     _DiskLoader
7E00:3BFE     _OpenDisk
7E00:3EB0     _ValidateBootBlock
7E00:3EF2     _FindFile
7E00:4082     _open_exefile
7E00:41C4     RootEntryToFileName
7E00:4246     _load_PE_file
7E00:45A8     _checkSign
7E00:45FA     dbg_pwrite_real
7E00:4666     dbg_pwrite_b_real
7E00:46D6     file_to_pmem
7E00:478C     dbg_pwrite_bl
7E00:47FC     EntryMatch
7E00:4864     read_m
7E00:4952     lseek_m
7E00:4A66     lSeekRead
7E00:4A94     _ParseActivePartition
7E00:4BA2     ParseBootSector
7E00:4BB2     readCluster
7E00:4BE6     GetNextCluster
7E00:4D98     _ReadDiskBlock
7E00:4EF2     _ReadPhysicalSectors
7E00:4F58     _ReadBIOSSectors
7E00:4FAC     _BIOSResetDisk
7E00:4FCA     Pstrncmp
7E00:5082     DisplayErrorWithAppName
7E00:50BA     _ReadSectorLBAEx
7E00:510A     Int13ExRead
7E00:5134     Int13ExtensionsAvailable

7E00:5166  Segment _TEXT of module math32.asm (C:\pharemb\lib\appdisk.lib)
7E00:5166     _Div32
7E00:5166     Div32_
7E00:5166     Div32
7E00:518C     _Mod32
7E00:518C     Mod32_
7E00:518C     Mod32
7E00:51B0     _Mul32
7E00:51B0     Mul32_
7E00:51B0     Mul32

7E00:51D6  Segment _TEXT of module rutil.asm (C:\pharemb\lib\kernel.lib)
7E00:51D6     _pm32_go
7E00:530B     _toprot
7E00:534C     _toreal
7E00:5399     _killPaging
7E00:53BB     _restartPaging
7E00:53E3     _PeekByte
7E00:53F6     _PokeByte
7E00:540F     _saveSystemRegs
7E00:5425     _restoreSystemRegs
7E00:5447     _DoFninit
7E00:544A     asm_write_str
7E00:547E     _Pinpd
7E00:548F     _Poutpd

7E00:54A4  Segment _TEXT of module services.c (C:\pharemb\lib\kernel.lib)
7E00:54A4     _pKServices
7E00:54C0     _pIfeServices
7E00:555A     _ife_services
7E00:5590     _IfeKernel
7E00:55B4     _IfeIll
7E00:55C8     _Ife_reset_data
7E00:5656     _Ife_pmiv_get
7E00:569A     _Ife_pmiv_set
7E00:56E8     _Ife_apmiv_set
7E00:5736     _Ife_bios_call
7E00:5816     _Ife_excep_get
7E00:5890     _Ife_excep_set
7E00:591E     _Ife_jmp_toreal
7E00:5920     _KPutChar
7E00:5930     _KPutBytes
7E00:5976     _KSetCursor
7E00:5988     _KGetCursor
7E00:59AE     _KGetInfoPtr
7E00:59DC     _KGetMonVersion
7E00:59F4     _KCauseExc
7E00:5A04     _KGetIntHandler
7E00:5A46     _KSetIntHandler
7E00:5A94     _KGetExcHandler
7E00:5B1A     _KSetExcHandler
7E00:5BB0     _link_dummy

7E00:5BB8  Segment _TEXT of module kernerr.c (C:\pharemb\lib\kernel.lib)
7E00:5BB8     _kMsg_warn_write_to_prot1
7E00:5BD0     _kMsg_warn_link_disk2
7E00:5BE3     _kMsg_warn_link_disk1
7E00:5BED     _kMsg_warn_pm_app2
7E00:5C13     _kMsg_warn_pm_app1
7E00:5C1D     _kMsg_err_sys_halted
7E00:5C35     _kMsg_err_nostacks
7E00:5C57     _kMsg_err_int_stacks
7E00:5C99     _kMsg_err_dos
7E00:5D2D     _kMsg_err_no_app
7E00:5D68     _kMsg_err_link_rom
7E00:5D91     _kMsg_err_load_app_rom
7E00:5DB8     _kMsg_warning
7E00:5DC1     _kMsg_system_err
7E00:5DCF     _kMsg_kernel
7E00:5DD7     _kMsg_fatal_err
7E00:5DE4     _kMsg_err_cmd_manager
7E00:5E04     _kMsg_warn_no_app2
7E00:5E18     _kMsg_warn_no_app1
7E00:5E2F     _kMsg_err_kern_write
7E00:5E66     _kMsg_warn_dosboot2
7E00:5E96     _kMsg_warn_dosboot1
7E00:5EBF     _kMsg_warn_write_to_prot2

7E00:5ECC  Segment _TEXT of module ekidata.c (C:\pharemb\lib\kernel.lib)
7E00:5ECC     _ekidata_func

7E00:5ECE  Segment _TEXT of module ekdata.c (C:\pharemb\lib\kernel.lib)
7E00:5ECE     _ekdata_func

7E00:5ED0  Segment _TEXT of module vsbvars (C:\pharemb\lib\kernvsb.lib)
7E00:5ED0     _VsbVars

7E00:6038  Segment _TEXT of module pcser.c (C:\pharemb\lib\pcser.lib)
7E00:60B4     _EkCustomCommInitialize
7E00:60B6     _EkCustomProtCommInitialize
7E00:6282     _EkCustomCommGetStatus
7E00:62AE     _EkCustomCommClearStatus
7E00:62B6     _EkCustomCommStartReceive
7E00:62D0     _EkCustomCommReadCharacter
7E00:633C     _EkCustomCommStartSend
7E00:6356     _EkCustomCommWriteCharacter
7E00:63BA     _EkCustomCommBreakOn
7E00:63D8     _EkCustomCommBreakOff
7E00:63F6     _EkCustomCommSetSpeed

7E00:647C  Segment _TEXT of module pcsera.asm (C:\pharemb\lib\pcser.lib)
7E00:647C     _EkCustomBreakInitialize

7E00:6548  Segment _TEXT of module pcati1.asm (C:\pharemb\lib\PCAT.LIB)
7E00:6548     EkCustomRealModeInit
7E00:661C     _EkCustomGetE820MemoryBlock
7E00:672F     _Reset8259s
7E00:6768     _ResetFPU
7E00:676D     _enab_a20
7E00:6848     _SizeRegionKb
7E00:6907     _memset32
7E00:6956     _EkCustomMaskNMI
7E00:6971     _EkCustomClearNMI
7E00:6987     _ClearNMI16
7E00:69DE     _EkCustomCoprocInit
7E00:6A27     _EkCustomLinearRead
7E00:6A63     _EkCustomLinearWrite
7E00:6AAF     _EkCustomLinearFill

7E00:6AF6  Segment _TEXT of module pcati2.c (C:\pharemb\lib\PCAT.LIB)
7E00:6AF6     _EkCustomSystemInit
7E00:6BBA     _EkCustomDeviceInit
7E00:6C1E     _EkCustomRunMode
7E00:6C38     _EkCustomHaltMonitor
7E00:6CAC     _EkCustomBiosInit
7E00:6D6E     _EkCustomPutChar
7E00:6E64     _EkCustomSetScreenCursor
7E00:6E88     _EkCustomGetScreenCursor
7E00:6E9E     _ScrollScreen
7E00:6F48     _Myfmemcpy
7E00:6F62     _UpdateCursor
7E00:6FA4     _SetupScreenVars
7E00:704C     _ChooseScreenSeg
7E00:706E     _ClearRegion
7E00:70E4     _SizeSystemMemory
7E00:7176     _EkCustomGetSystemMemoryMap
7E00:71CE     _EkCustomDisplaySystemMemoryMap
7E00:71D0     _SetKernelInfo8259Data

7E00:7240  Segment _TEXT32 of module int32.asm (C:\pharemb\lib\hostcomm.lib)
7E00:7240     _idt_handler
7E00:7740     _nmi_idt_handler
7E00:7740     _idt_handler_end
7E00:7784     pre_int_umbrella
7E00:779B     int_umbrella
7E00:79F4     lite_umb_no_ecode
7E00:7A1B     lite_umb_ecode
7E00:7AA3     _lite_umb_pre_cleanup
7E00:7AA7     _fatal32
7E00:7B03     _exc_ec_handler
7E00:7B22     _exc_handler
7E00:7D01     _iret_handler
7E00:7D02     _ife_handler
7E00:7D75     _nmi_handler
7E00:7DB2     CallApp32
7E00:7DEC     CallFunc32

7E00:7EA0  Segment _TEXT32 of module pcsera.asm (C:\pharemb\lib\pcser.lib)
7E00:7EA0     _EkCustomBreakEnable32
7E00:7EBB     _EkCustomBreakDisable32
7E00:7ED4     Serial_Interrupt_Handler
7E00:7F3C     Parallel_Interrupt_Handler

7E00:7F8C  Segment _TEXT32 of module pcati1.asm (C:\pharemb\lib\PCAT.LIB)
7E00:7F8C     _EkCustom32MaskNMI
7E00:7F9E     _EkCustom32ClearNMI
7E00:8008     _SpuriousIRQ7Handler
7E00:8019     _SpuriousIRQ15Handler

